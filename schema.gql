# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateJournalInput {
  category: String!
  content: String!
  title: String!
}

input CreateUserInput {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type JournalEntry {
  category: String!
  content: String!
  createdAt: DateTime!
  id: String!
  title: String!
  updatedAt: DateTime!
  userId: String!
}

input LoginRequestDTO {
  email: String!
  password: String!
}

type LoginResponseDTO {
  access_token: String!
  user: UserEntity!
}

type Mutation {
  """Create a new journal entry for the authenticated user"""
  createJournalEntry(data: CreateJournalInput!): JournalEntry!
  createUser(createUserInput: CreateUserInput!): UserEntity!

  """Delete a journal entry"""
  deleteJournalEntry(id: String!): Boolean!
  login(loginInput: LoginRequestDTO!): LoginResponseDTO!
  register(registerInput: RegisterRequestDTO!): RegisterResponseDTO!
  removeUser(email: String!): UserEntity!

  """Update an existing journal entry"""
  updateJournalEntry(data: UpdateJournalInput!): JournalEntry!
}

type Query {
  findAll: [UserEntity!]!
  findOne(email: String!): UserEntity!

  """Fetch all journal entries for the authenticated user"""
  getJournalEntries: [JournalEntry!]!

  """Fetch a specific journal entry by ID"""
  getJournalEntry(id: String!): JournalEntry!
  whoAmI: UserEntity!
}

input RegisterRequestDTO {
  email: String!
  password: String!
}

type RegisterResponseDTO {
  access_token: String!
  user: UserEntity!
}

input UpdateJournalInput {
  category: String
  content: String
  id: String!
  title: String
}

type UserEntity {
  createdAt: DateTime!
  email: String!
  id: String!
  password: String!
}